@model List<WholesaleDistributionApp.Models.WarehouseStock>

@{
    ViewData["Title"] = "Stock Management";
}

<style>
    .colored-border-card {
        border: 2px solid #000000;
        border-radius: 20px; /* Optional: Rounded corners */
        width: 180px; /* Fixed width for the card */
        height: 250px; /* Fixed height for the card */
        overflow: hidden;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
    }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: start;
        gap: 20px; /* Space between cards */
        margin-left: 10px;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: start;
        height: 100%;
        padding: 0;
    }

        .card-body img {
            width: 100%;
            height: 70%;
            object-fit: cover;
            margin: 0;
        }

        .card-body .text-wrapper {
            display: flex;
            flex-direction: column;
            justify-content: space-around; /* Distribute space around the text container */
            height: 30%;
            padding: 10px;
        }

        .card-body h5, .card-body p {
            margin: 0;
            text-align: start;
        }

    /* Hover effect */
    .colored-border-card:hover {
        background-color: #2689E2;
    }

    /* Active effect (when pressed) */
    .selected {
        background-color: #2689E2;
        border-color: #0fff50;
        border-width: 3px;
    }

        .selected .card-title, .selected .card-text {
            color: white;
        }

    .cart-button {
        position: absolute;
        bottom: 10px;
        right: 22px;
        background: none;
        border: none;
        cursor: pointer;
        color: #000;
        font-size: 1.3em;
        z-index: 1000;
    }

    .tooltip-text {
        visibility: hidden;
        background-color: black;
        color: #fff;
        text-align: center;
        border-radius: 5px;
        padding: 5px;
        font-size: 12px;
        position: absolute;
        z-index: 1;
        bottom: 35px;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;
        white-space: nowrap;
        transition: opacity 0.3s;
    }

    .cart-button:hover .tooltip-text {
        visibility: visible;
        opacity: 1;
    }
</style>

<input type="hidden" id="currentUrl" value="@Url.Action("ViewProducts", "Retailer")" />
<div class="pc-content">
    <!-- Main Content section -->
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <!-- Top Bar -->
                <div class="card-header d-flex justify-content-between align-items-space-between">
                    <h5 class="card-title">Products</h5>
                </div>
                <div class="card-header d-flex justify-content-between align-items-center">
                    <!-- Search Form -->
                    <form asp-controller="Retailer" asp-action="ViewProducts" method="get" class="d-flex align-items-center mb-3">
                        <input type="text" name="searchString" id="searchInput" class="form-control me-2" placeholder="Search Item Name" value="@ViewData["CurrentFilter"]">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </form>
                    <!-- View Cart Button -->
                    <button type="button" class="btn btn-secondary mb-4 ti ti-shopping-cart" data-bs-toggle="modal" data-bs-target="#viewCartModal">View Cart</button>
                </div>
                <div>
                    <div class="card-container mt-4 mb-4">
                        @if (Model != null && Model.Count > 0)
                        {
                            foreach (var stock in Model)
                            {
                                <div class="colored-border-card" data-stock-id="@stock.StockId">
                                    <div class="card-body">
                                        <img src="@stock.ImgDownloadURL" alt="Stock Image" />
                                        <div class="text-wrapper">
                                            <h5 class="card-title">@stock.ItemName</h5>
                                            <p class="card-text">
                                                <strong>RM @stock.SinglePrice / Item</strong><br />
                                            </p>
                                            <button class="cart-button" type="button">
                                                <i class="ti ti-shopping-cart"></i>
                                                <span class="tooltip-text">Add to Cart</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center">
                                <p>Currently No Products to Purchase</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Main Content section -->
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cart = [];

            document.querySelectorAll('.cart-button').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.stopPropagation();
                    const card = this.closest('.colored-border-card');
                    card.classList.toggle("selected");
                    const stockId = card.getAttribute("data-stock-id");
                    const stock = getStockDetails(stockId);

                    if (card.classList.contains("selected")) {
                        cart.push(stock);
                    } else {
                        const index = cart.findIndex(item => item.Id === stock.Id);
                        if (index > -1) {
                            cart.splice(index, 1);
                        }
                    }
                });

                button.addEventListener('mouseenter', function () {
                    const card = this.closest('.colored-border-card');
                    const tooltipText = card.querySelector('.tooltip-text');
                    if (card.classList.contains("selected")) {
                        tooltipText.textContent = "Remove";
                    } else {
                        tooltipText.textContent = "Add to Cart";
                    }
                });
            });

            document.getElementById("viewCartButton").addEventListener("click", function () {
                displayCart(cart);
            });
        });

        function getStockDetails(stockId) {
            const stockElement = document.querySelector(`.colored-border-card[data-stock-id="${stockId}"]`);
            const itemName = stockElement.querySelector(".card-title").textContent.trim();
            const singlePrice = stockElement.querySelector(".card-text strong").textContent.trim();
            const imgDownloadURL = stockElement.querySelector("img").src;

            return { Id: stockId, ItemName: itemName, SinglePrice: singlePrice, ImgDownloadURL: imgDownloadURL };
        }

        function displayCart(cart) {
            const cartContainer = document.getElementById("cartContainer");
            cartContainer.innerHTML = "";

            if (cart.length > 0) {
                cart.forEach(item => {
                    const cartItem = document.createElement("div");
                    cartItem.className = "cart-item";
                    cartItem.innerHTML = `
                        <h5>${item.ItemName}</h5>
                        <p>${item.SinglePrice}</p>
                        <img src="${item.ImgDownloadURL}" alt="Stock Image" style="width: 50px; height: 50px; object-fit: cover;">
                    `;
                    cartContainer.appendChild(cartItem);
                });
            } else {
                cartContainer.innerHTML = "<p>No items in cart.</p>";
            }

            cartContainer.style.display = "block";
        }
    </script>
}

<!-- Cart Container -->
<div id="cartContainer" class="cart-container"></div>
