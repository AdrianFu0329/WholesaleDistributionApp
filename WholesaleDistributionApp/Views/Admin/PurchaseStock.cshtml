@model List<WholesaleDistributionApp.Models.DistributorStock>

@{
    ViewData["Title"] = "Purchase Stock";
}

<style>
        .invoice-section {
        margin-bottom: 40px;
        padding: 20px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        background-color: #eaf3ff;
    }
    .invoice-header {
        text-align: center;
        margin-bottom: 20px;
    }
    .invoice-header h2 {
        margin-bottom: 5px;
        font-size: 24px;
        font-weight: bold;
    }
    .invoice-header h4 {
        margin-top: 0;
        font-size: 18px;
        color: #555;
    }
    .invoice-table th, .invoice-table td {
        text-align: center;
        vertical-align: middle;
    }
    .payment-section {
        margin-top: 20px;
    }
    .payment-section label {
        font-weight: bold;
        margin-bottom: 10px;
    }
    .paymentInfo p {
        margin: 0;
    }
    .paymentInfo img {
        margin-top: 10px;
    }
    .image-preview-container {
        width: 250px; 
        height: 250px;
        overflow: hidden;
        border: 1px solid #ddd;
        margin-bottom: 10px; 
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: auto; 
        margin-right: auto;
    }

    .image-preview-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
</style>

<input type="hidden" id="currentUrl" value="@Url.Action("PurchaseStock", "Admin")" />
<div class="pc-content">
    <!-- Breadcrumb section -->
    <div class="page-header">
        <div class="page-block">
            <div class="row align-items-center">
                <div class="col-md-12">
                    <div class="page-header-title">
                        <h5 class="m-b-10">Purchase Stock</h5>
                    </div>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                        <li class="breadcrumb-item" aria-current="page">Purchase Stock</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb section -->
    <!-- Main Content section -->
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <!-- Top Bar -->
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title">Warehouse</h5>
                    <!-- Search Form -->
                    <form asp-controller="Admin" asp-action="PurchaseStock" method="get" class="d-flex align-items-center mb-3">
                        <input type="text" name="searchString" id="searchInput" class="form-control me-2" placeholder="Search Item Name" value="@ViewData["CurrentFilter"]">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </form>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="stockTable" class="table table-bordered table-striped table-hover" style="width:100%">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col" style="width: 5%"><input type="checkbox" id="selectAll" /></th>
                                    <th scope="col" style="width: 5%">No</th>
                                    <th scope="col">Stock ID</th>
                                    <th scope="col">Stock Name</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Price per Item</th>
                                    <th style="display: none;" scope="col">Distributor ID</th>
                                    <th scope="col">Distributor</th>
                                    <th scope="col">Delivery Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Count > 0)
                                {
                                    int index = 1;
                                    foreach (var stock in Model)
                                    {
                                        <tr>
                                            <td><input type="checkbox" class="selectRow" data-stock-id="@stock.StockId" data-stock-name="@stock.ItemName" data-quantity="@stock.Quantity" data-price="@stock.SinglePrice" data-distributor-id="@stock.StockDistributorId" data-distributor-name="@stock.Distributor?.UserName" data-distributor-bankacc="@stock.Distributor?.BankAccNo" data-distributor-bankname="@stock.Distributor?.BankName" data-distributor-qr="@stock.Distributor?.QRImgURL" data-distributor-address="@stock.Distributor?.Address"/></td>
                                            <td>@index</td>
                                            <td type="button" class="btn btn-primary btn-sm w-100 viewDetailsBtn" data-stock-id="@stock.StockId">@stock.StockId</td>
                                            <td>@stock.ItemName</td>
                                            <td>@stock.Quantity</td>
                                            <td>@stock.SinglePrice</td>
                                            <td style="display: none;">@stock.StockDistributorId</td>
                                            <td>@stock.Distributor?.UserName</td>
                                            <td>@stock.DistributorDeliveryStatus</td>
                                        </tr>
                                        index++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center">Currently No Stock to Purchase</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <button id="confirmOrderBtn" class="btn btn-success mt-3">Confirm Order</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Main Content section -->
</div>

<!-- Stock Details Modal -->
<div class="modal fade" id="stockDetailsModal" tabindex="-1" aria-labelledby="stockDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stockDetailsModalLabel">Stock Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="stockImage" class="image-preview-container" src="" alt="Stock Image" style="max-width: 100%;" />
                <p><strong>Item Name:</strong> <span id="stockItemName"></span></p>
                <p><strong>Description:</strong> <span id="stockDescription"></span></p>
                <p><strong>Quantity:</strong> <span id="stockQuantity"></span></p>
                <p><strong>Price:</strong> <span id="stockPrice"></span></p>
                <p><strong>Distributor ID:</strong> <span id="stockDistributorId"></span></p>
            </div>
        </div>
    </div>
</div>
<!-- Order Confirmation Modal -->
<div class="modal fade" id="orderConfirmationModal" tabindex="-1" aria-labelledby="orderConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderConfirmationModalLabel">Confirm Order</h5>
                <h5 class="modal-title" id="checkoutStockLabel" style="display: none;">Checkout Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table id="confirmationTable" class="table table-bordered table-striped table-hover" style="width:100%">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">Stock ID</th>
                            <th scope="col">Stock Name</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Price per Item</th>
                            <th scope="col">Distributor</th>
                            <th scope="col">Total (RM)</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="6" class="text-end">Total Amount:</th>
                            <th id="totalAmountCell">0.00</th>
                        </tr>
                    </tfoot>
                </table>

                <!-- Checkout content hidden initially -->
                <div id="checkoutContent" style="display: none;">
                    <div id="checkoutInvoice"></div>
                    <hr>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="proceedBtn">Proceed</button>
                <button type="button" class="btn btn-success" id="submitOrderBtn" style="display: none;">Pay Now</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
@*     <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script> *@
    <script>
        function openStockDetailsModal(stockIdentifier) {
            console.log('Opening modal for stockIdentifier:', stockIdentifier); // Added console log
            $.ajax({
                url: '/Admin/GetDistributorStockDetails',
                type: 'GET',
                data: { stockIdentifier: stockIdentifier },
                success: function (response) {
                    console.log('Response from server:', response); // Added console log
                    if (response.success) {
                        // Populate the modal with stock details
                        $('#stockItemName').text(response.stock.itemName);
                        $('#stockDescription').text(response.stock.description);
                        $('#stockQuantity').text(response.stock.quantity);
                        $('#stockPrice').text(response.stock.singlePrice);
                        $('#stockDistributorId').text(response.stock.stockDistributorId);
                        $('#stockImage').attr('src', response.stock.imgDownloadURL);

                        // Show the modal
                        $('#stockDetailsModal').modal('show');
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('An error occurred while fetching stock details.');
                }
            });
        }

        $(document).ready(function () {
            // Filter table based on search input
            $('#searchInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('#stockTable tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Event delegation for View Details Button
            $('#stockTable').on('click', '.viewDetailsBtn', function () {
                var stockId = $(this).data('stock-id');
                openStockDetailsModal(stockId);
            });

            // Select/Deselect all rows
            $('#selectAll').on('change', function () {
                $('.selectRow').prop('checked', this.checked);
            });

            // Show order confirmation modal
            $('#confirmOrderBtn').on('click', function () {
                var selectedStocks = [];
                $('.selectRow:checked').each(function () {
                    var stockId = $(this).data('stock-id');
                    var stockName = $(this).data('stock-name');
                    var quantity = $(this).data('quantity');
                    var price = $(this).data('price');
                    var StockDistributorId = $(this).data('distributor-id');
                    var StockDistributorName = $(this).data('distributor-name');
                    var BankAcc = $(this).data('distributor-bankacc');
                    var BankName = $(this).data('distributor-bankname');
                    var QrImg = $(this).data('distributor-qr');
                    var Address = $(this).data('distributor-address');
                    var total = quantity * price;
                    selectedStocks.push({ stockId, stockName, quantity, price, total, StockDistributorId, StockDistributorName, BankAcc, BankName, QrImg, Address });
                });

                // Check if no items are selected
                if (selectedStocks.length === 0) {
                    alert('No items selected for checkout.');
                    return; // Prevent the modal from being shown
                }

                var confirmationTableBody = $('#confirmationTable tbody');
                confirmationTableBody.empty();

                selectedStocks.forEach(function (stock) {
                    var row = `<tr>
                            <td><input type="checkbox" class="selectOrderRow" data-stock-id="${stock.stockId}" checked /></td>
                            <td>${stock.stockId}</td>
                            <td>${stock.stockName}</td>
                            <td><input type="number" class="form-control quantityInput" data-stock-id="${stock.stockId}" value="${stock.quantity}" min="1" max="${stock.quantity}" /></td>
                            <td>${stock.price}</td>
                            <td>${stock.StockDistributorName}</td>
                            <td style="display: none;">${stock.StockDistributorId}</td>
                            <td class="totalCell">${stock.total}</td>
                                                        <td style="display: none;">${stock.BankAcc}</td>
                            <td style="display: none;">${stock.BankName}</td>
                            <td style="display: none;">${stock.QrImg}</td>
                            <td style="display: none;">${stock.Address}</td>

                        </tr>`;
                    confirmationTableBody.append(row);
                });

                $('#orderConfirmationModal').modal('show');
                updateTotalAmount();
            });


            // Update total when quantity changes
            $('#confirmationTable').on('input', '.quantityInput', function () {
                //to check if user manual enter value exceeds the quantity
                var $this = $(this);
                var maxQuantity = parseInt($this.attr('max'));
                var enteredQuantity = parseInt($this.val());

                if (enteredQuantity > maxQuantity) {
                    $this.val(maxQuantity); // Reset to max quantity
                    alert('Entered quantity exceeds available stock. Resetting to maximum allowed.');
                }
                var row = $(this).closest('tr');
                var price = parseFloat(row.find('td:eq(4)').text());
                var quantity = parseInt($(this).val());

                var total = price * quantity;
                row.find('.totalCell').text(total.toFixed(2));
                updateTotalAmount();
            });

            $('#confirmationTable').on('change', '#selectAllOrders', function () {
                $('.selectOrderRow').prop('checked', this.checked);
            });

            function updateTotalAmount() {
                var total = 0;
                $('#confirmationTable tbody tr').each(function () {
                    var subtotal = parseFloat($(this).find('.totalCell').text());
                    total += subtotal;
                });
                $('#totalAmountCell').text(total.toFixed(2));
            }

            $('#confirmationTable').on('change', '.selectOrderRow', function () {
                var isChecked = $(this).prop('checked');
                if (!isChecked) {
                    $(this).closest('tr').remove();
                    updateTotalAmount();
                }
            });

            // Payment method selection change event
            $(document).on('change', '.paymentMethodSelect', function () {
                var selectedMethod = $(this).val();
                var distributorId = $(this).attr('id').split('_')[1]; // Extract distributorId from id attribute
                var $bankTransferInfo = $('#bankTransferInfo_' + distributorId);
                var $qrCodeInfo = $('#qrCodeInfo_' + distributorId);

                if (selectedMethod === 'bankTransfer') {
                    $bankTransferInfo.show();
                    $qrCodeInfo.hide();
                } else if (selectedMethod === 'qrCode') {
                    $bankTransferInfo.hide();
                    $qrCodeInfo.show();
                } else {
                    $bankTransferInfo.hide();
                    $qrCodeInfo.hide();
                }
            });

            //proceed button
            $('#proceedBtn').on('click', function () {
                // Hide the table and show checkout content
                $('#confirmationTable').hide();
                $('#proceedBtn').hide();
                $('#orderConfirmationModalLabel').hide();
                $('#checkoutStockLabel').show();
                $('#checkoutContent').show();

                // Toggle modal size based on checkout state
                if ($('#checkoutContent').is(':visible')) {
                    $('#orderConfirmationModal .modal-dialog').removeClass('modal-dialog-centered').addClass('modal-fullscreen');
                } else {
                    $('#orderConfirmationModal .modal-dialog').removeClass('modal-fullscreen').addClass('modal-dialog-centered');
                }

                // Generate the invoice-like format
                var invoiceHtml = generateInvoiceHtml();
                $('#checkoutInvoice').html(invoiceHtml);

                // Show the "Pay Now" button
                $('#submitOrderBtn').show();
            });

            function generateInvoiceHtml() {
                var groupedStocks = {};

                // Group stocks by distributor ID
                $('#confirmationTable tbody tr').each(function () {
                    var distributorId = $(this).find('td:eq(6)').text();
                    var distributorName = $(this).find('td:eq(5)').text();
                    var bankAcc = $(this).find('td:eq(8)').text();
                    var bankName = $(this).find('td:eq(9)').text();
                    var qrImg = $(this).find('td:eq(10)').text();
                    var address = $(this).find('td:eq(11)').text();
                    var stockName = $(this).find('td:eq(2)').text();
                    var quantity = $(this).find('.quantityInput').val();
                    var price = $(this).find('td:eq(4)').text();
                    var total = $(this).find('.totalCell').text();

                    if (!groupedStocks[distributorId]) {
                        groupedStocks[distributorId] = [];
                    }
                    groupedStocks[distributorId].push({ distributorName, stockName, quantity, price, total, bankAcc, bankName, qrImg, address });
                });

                var invoiceHtml = '';
                for (var distributorId in groupedStocks) {

                    var distributorName = groupedStocks[distributorId][0].distributorName;
                    var bankAcc = groupedStocks[distributorId][0].bankAcc || 'N/A';
                    var bankName = groupedStocks[distributorId][0].bankName || 'N/A';
                    var qrImg = groupedStocks[distributorId][0].qrImg || 'N/A';
                    var address = groupedStocks[distributorId][0].address || 'N/A';

                    invoiceHtml += '<div class="invoice-section">';
                    invoiceHtml += '  <div class="invoice-header">';
                    invoiceHtml += '    <h2>Invoice</h2>';
                    invoiceHtml += '    <h4 class="mt-4">Distributor: ' + distributorName + '</h4>';
                    invoiceHtml += '    <h5 class="mt-2">Address: ' + address + '</h5>';
                    invoiceHtml += '  </div>';

                    invoiceHtml += ' <div class="table-responsive">';
                    invoiceHtml += '  <table class="table table-bordered table-striped invoice-table">';
                    invoiceHtml += '    <thead>';
                    invoiceHtml += '      <tr>';
                    invoiceHtml += '        <th>Stock Name</th>';
                    invoiceHtml += '        <th>Quantity</th>';
                    invoiceHtml += '        <th>Price per Item</th>';
                    invoiceHtml += '        <th>Total</th>';
                    invoiceHtml += '      </tr>';
                    invoiceHtml += '    </thead>';
                    invoiceHtml += '    <tbody>';

                    var totalAmount = 0;
                    groupedStocks[distributorId].forEach(function (stock) {
                        invoiceHtml += '      <tr>';
                        invoiceHtml += '        <td>' + stock.stockName + '</td>';
                        invoiceHtml += '        <td>' + stock.quantity + '</td>';
                        invoiceHtml += '        <td>' + stock.price + '</td>';
                        invoiceHtml += '        <td>' + stock.total + '</td>';
                        invoiceHtml += '      </tr>';
                        totalAmount += parseFloat(stock.total);
                    });

                    invoiceHtml += '    </tbody>';
                    invoiceHtml += '    <tfoot>';
                    invoiceHtml += '      <tr>';
                    invoiceHtml += '        <th colspan="3">Total Amount:</th>';
                    invoiceHtml += '        <td>' + totalAmount.toFixed(2) + '</td>';
                    invoiceHtml += '      </tr>';
                    invoiceHtml += '    </tfoot>';
                    invoiceHtml += '  </table>';
                    invoiceHtml += '  </div>';


                    invoiceHtml += '  <div class="payment-section">';
                    invoiceHtml += '    <label for="paymentMethodSelect_' + distributorId + '">Payment Method</label>';
                    invoiceHtml += '    <select class="form-select paymentMethodSelect" id="paymentMethodSelect_' + distributorId + '" style="width: 20%;">';
                    invoiceHtml += '      <option value="" selected>--Select Payment Method--</option>';
                    invoiceHtml += '      <option value="bankTransfer">Bank Account Transfer</option>';
                    invoiceHtml += '      <option value="qrCode">QR Code</option>';
                    invoiceHtml += '    </select>';

                    invoiceHtml += '    <div id="bankTransferInfo_' + distributorId + '" class="paymentInfo mt-4" style="display:none;">';
                    invoiceHtml += '      <p><strong>Bank Name:</strong> ' + bankName + '</p>';
                    invoiceHtml += '      <p><strong>Account Number:</strong> ' + bankAcc + '</p>';
                    invoiceHtml += '      <p><strong>Account Holder:</strong> ' + distributorName + '</p>';
                    invoiceHtml += '    </div>';

                    invoiceHtml += '    <div id="qrCodeInfo_' + distributorId + '" class="paymentInfo" style="display:none;">';
                    invoiceHtml += '      <img id="qrCodeImg_' + distributorId + '" src="' + qrImg + '" alt="QR Code" style="max-width:15%;margin-top:20px;">';
                    invoiceHtml += '    </div>';

                    invoiceHtml += '    <label class="mt-4" for="proofOfPayment_' + distributorId + '">Upload Proof of Payment</label>';
                    invoiceHtml += '    <input class="form-control proofOfPayment" type="file" id="proofOfPayment_' + distributorId + '" style="width: 20%;">';
                    invoiceHtml += '  </div>';
                    invoiceHtml += '</div>';
                }

                return invoiceHtml;
            }

            function calculateTotalAmount(stocks) {
                var totalAmount = 0;
                stocks.forEach(function (stock) {
                    totalAmount += parseFloat(stock.total);
                });
                return totalAmount.toFixed(2);
            }

            // Submit order
            $('#submitOrderBtn').on('click', function () {
                var groupedOrderDetails = {};
                var valid = true;

                $('#confirmationTable tbody tr').each(function () {
                    var stockDistributorId = $(this).find('td:eq(6)').text();
                    var stockDistributorName = $(this).find('td:eq(5)').text();
                    var stockId = $(this).find('.quantityInput').data('stock-id');
                    var quantity = parseInt($(this).find('.quantityInput').val());
                    var pricePerItem = parseFloat($(this).find('td:eq(4)').text());
                    var subtotal = parseFloat($(this).find('.totalCell').text());

                    if (quantity <= 0) {
                        alert('Quantity must be greater than 0.');
                        valid = false;
                        return false; // Exit the loop if invalid quantity is found
                    }

                    var $quantityInput = $(this).find('.quantityInput');
                    var maxQuantity = parseInt($quantityInput.attr('max'));
                    var enteredQuantity = parseInt($quantityInput.val());

                    if (enteredQuantity > maxQuantity) {
                        valid = false;
                        alert('One or more quantities exceed available stock. Please correct them before proceeding.');
                        return false; // Exit the loop
                    }

                    if (!groupedOrderDetails[stockDistributorId]) {
                        groupedOrderDetails[stockDistributorId] = [];
                    }
                        groupedOrderDetails[stockDistributorId].push({ stockId, quantity, pricePerItem, subtotal, stockDistributorId, stockDistributorName });
                });

                if (!valid) {
                    return;
                }

                var formDataList = [];
                for (var stockDistributorId in groupedOrderDetails) {
                    var proofOfPaymentFile = $('#proofOfPayment_' + stockDistributorId)[0].files[0];
                    var stockDistributorName = groupedOrderDetails[stockDistributorId][0].stockDistributorName; // Accessing stockDistributorName from the first element

                    if (!proofOfPaymentFile) {
                        alert('Please upload proof of payment for Distributor: ' + stockDistributorName);
                        return;
                    }

                    var allowedExtensions = ['jpg', 'jpeg', 'png', 'pdf'];
                    var fileExtension = proofOfPaymentFile.name.split('.').pop().toLowerCase();
                    if ($.inArray(fileExtension, allowedExtensions) === -1) {
                        alert('Invalid file type for Distributor ' + stockDistributorId + '. Only JPG, JPEG, PNG, and PDF files are allowed.');
                        return;
                    }

                    if (proofOfPaymentFile.size > 5 * 1024 * 1024) { // 5MB size limit
                        alert('File size exceeds 5MB limit for Distributor ' + stockDistributorName);
                        return;
                    }
                    // console.log(stockDistributorName);
                    // console.log(stockDistributorId);
                    var formData = new FormData();
                    formData.append('orderDetails', JSON.stringify(groupedOrderDetails[stockDistributorId]));
                    formData.append('proofOfPayment', proofOfPaymentFile);
                    formData.append('stockDistributorId', stockDistributorId);
                    formData.append('stockDistributorName', stockDistributorName);
                    formDataList.push({ formData, stockDistributorName });

                    //             console.log("FormData contents for distributor:", stockDistributorName);
                    // formData.forEach((value, key) => {
                    //     console.log(key + ': ' + value);
                    // });
                }

                var successfulOrders = 0;

                formDataList.forEach(function (item) {
                    var formData = item.formData;
                    var stockDistributorName = item.stockDistributorName;

                    $.ajax({
                        url: '/Admin/SubmitOrder',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response.success) {
                                successfulOrders++;
                                alert('Order submitted successfully for Distributor: ' + stockDistributorName);

                                if (successfulOrders === formDataList.length) { // If all orders are successful, reload the page
                                    location.reload();
                                }
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('An error occurred while submitting the order.');
                        }
                    });
                });
            });




            // Reset modal state when closed
            $('#orderConfirmationModal').on('hidden.bs.modal', function () {
                // Clear modal content
                $('#orderConfirmationModalLabel').show();
                $('#checkoutStockLabel').hide();
                $('#checkoutContent').hide();
                $('#confirmationTable').show();
                $('#proceedBtn').show();
                $('#submitOrderBtn').hide();
                $('#orderConfirmationModal .modal-dialog').removeClass('modal-fullscreen').addClass('modal-dialog-centered');
                $('#paymentMethodSelect').val('');
                $('#bankTransferInfo').hide();
                $('#qrCodeInfo').hide();
                $('#proofOfPayment').val('');
            });

        });
    </script>
}